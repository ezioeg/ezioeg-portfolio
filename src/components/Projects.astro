---
const projects = [
    {
        id: 1,
        title: "Cambio Fácil App",
        description:
            "Aplicación móvil desarrollada con React Native y Expo para calcular el cambio entre bolívares y dólares con diferentes tasas (BCV, paralelo, personalizada). Permite compartir datos bancarios protegidos por autenticación biométrica.",
        tags: ["React Native", "Expo", "Firebase", "Next.js", "Vercel"],
        images: [
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
            "/placeholder.svg?height=400&width=600",
        ],
        codeUrl: "#",
        previewUrl: "#",
    },
    {
        id: 2,
        title: "Pana una Birra App",
        description:
            "Aplicación móvil de ecommerce de cervezas desarrollada con React Native y Expo. Incluye login biométrico, escaneo QR para agregar productos, compras grupales con etiquetas de usuario y sincronización en tiempo real con Firebase.",
        tags: ["React Native", "Expo", "Firebase"],
        images: [
            "/images/pana-birra/login-android.png",
            "/images/pana-birra/login-ios.png",
            "/images/pana-birra/signup-android.png",
            "/images/pana-birra/signup-ios.png",
            "/images/pana-birra/featured-android.png",
            "/images/pana-birra/featured-ios.png",
            "/images/pana-birra/product-android.png",
            "/images/pana-birra/product-ios.png",
            "/images/pana-birra/cart-android.png",
            "/images/pana-birra/cart-ios.png",
        ],
        codeUrl: "https://github.com/ezioeg/pana-una-birra",
        previewUrl: "#",
    },
];
---

<section id="proyectos" class="projects">
    <div class="container">
        <h2 class="section-title">
            <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
            >
                <polyline points="16,18 22,12 16,6"></polyline>
                <polyline points="8,6 2,12 8,18"></polyline>
            </svg>
            Proyectos
        </h2>

        <div class="projects-grid">
            {
                projects.map((project) => (
                    <article class="project-card">
                        <div class="project-image" data-project-id={project.id}>
                            <img
                                src={project.images[4] || "/placeholder.svg"}
                                alt={project.title}
                                class="project-screenshot"
                            />

                            <div class="image-overlay">
                                <div class="expand-icon">
                                    <svg
                                        width="24"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        stroke-width="2"
                                    >
                                        <path d="M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7" />
                                    </svg>
                                </div>
                            </div>
                        </div>

                        <div class="project-content">
                            <h3 class="project-title">{project.title}</h3>

                            <div class="project-tags">
                                {project.tags.map((tag) => (
                                    <span class="tag">{tag}</span>
                                ))}
                            </div>

                            <p class="project-description">
                                {project.description}
                            </p>

                            <div class="project-actions">
                                <a
                                    href={project.codeUrl}
                                    class="btn btn-outline"
                                >
                                    <svg
                                        width="16"
                                        height="16"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        stroke-width="2"
                                    >
                                        <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22" />
                                    </svg>
                                    Code
                                </a>
                                {/* <a
                                    href={project.previewUrl}
                                    class="btn btn-outline"
                                >
                                    <svg
                                        width="16"
                                        height="16"
                                        viewBox="0 0 24 24"
                                        fill="none"
                                        stroke="currentColor"
                                        stroke-width="2"
                                    >
                                        <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6" />
                                        <polyline points="15,3 21,3 21,9" />
                                        <line x1="10" y1="14" x2="21" y2="3" />
                                    </svg>
                                    Preview
                                </a> */}
                            </div>
                        </div>
                    </article>
                ))
            }
        </div>
    </div>

    <!-- Carousel Modal -->
    <div id="carousel-modal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modal-title" class="modal-title"></h3>
                <button id="close-modal" class="close-button">
                    <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                    >
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </button>
            </div>

            <div class="carousel-container">
                <div class="carousel-main">
                    <div class="image-wrapper">
                        <img
                            id="carousel-image"
                            src="/placeholder.svg"
                            alt=""
                            class="carousel-image"
                        />
                    </div>

                    <button id="prev-btn" class="carousel-nav prev-btn">
                        <svg
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                        >
                            <polyline points="15,18 9,12 15,6"></polyline>
                        </svg>
                    </button>

                    <button id="next-btn" class="carousel-nav next-btn">
                        <svg
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                        >
                            <polyline points="9,18 15,12 9,6"></polyline>
                        </svg>
                    </button>

                    <div id="image-counter" class="image-counter"></div>
                </div>

                <div id="thumbnails" class="thumbnails"></div>
            </div>
        </div>
    </div>

    <!-- Decorative Elements -->
    <div class="decorative-terminal">
        <svg width="90" height="60" viewBox="0 0 90 60" fill="none">
            <rect
                x="5"
                y="5"
                width="80"
                height="50"
                rx="4"
                fill="rgba(99, 102, 241, 0.1)"
                stroke="rgba(99, 102, 241, 0.2)"></rect>
            <rect
                x="5"
                y="5"
                width="80"
                height="12"
                rx="4"
                fill="rgba(99, 102, 241, 0.2)"></rect>
            <circle cx="15" cy="11" r="2" fill="rgba(163, 230, 53, 0.6)"
            ></circle>
            <circle cx="25" cy="11" r="2" fill="rgba(163, 230, 53, 0.4)"
            ></circle>
            <circle cx="35" cy="11" r="2" fill="rgba(163, 230, 53, 0.4)"
            ></circle>
            <text
                x="10"
                y="28"
                font-family="monospace"
                font-size="6"
                fill="rgba(163, 230, 53, 0.7)">$ npm run dev</text
            >
            <text
                x="10"
                y="38"
                font-family="monospace"
                font-size="6"
                fill="rgba(163, 230, 53, 0.5)">Server running...</text
            >
            <text
                x="10"
                y="48"
                font-family="monospace"
                font-size="6"
                fill="rgba(163, 230, 53, 0.5)">localhost:4321</text
            >
        </svg>
    </div>

    <div class="decorative-responsive">
        <svg width="100" height="80" viewBox="0 0 100 80" fill="none">
            <rect
                x="5"
                y="20"
                width="40"
                height="25"
                rx="2"
                stroke="rgba(99, 102, 241, 0.3)"
                fill="rgba(99, 102, 241, 0.05)"></rect>
            <rect
                x="20"
                y="45"
                width="10"
                height="3"
                rx="1"
                fill="rgba(99, 102, 241, 0.3)"></rect>
            <rect
                x="15"
                y="48"
                width="20"
                height="8"
                rx="4"
                fill="rgba(99, 102, 241, 0.2)"></rect>
            <rect
                x="55"
                y="15"
                width="20"
                height="30"
                rx="3"
                stroke="rgba(99, 102, 241, 0.3)"
                fill="rgba(99, 102, 241, 0.05)"></rect>
            <circle
                cx="65"
                cy="50"
                r="2"
                stroke="rgba(99, 102, 241, 0.3)"
                fill="none"></circle>
            <rect
                x="80"
                y="10"
                width="15"
                height="25"
                rx="3"
                stroke="rgba(99, 102, 241, 0.3)"
                fill="rgba(99, 102, 241, 0.05)"></rect>
            <circle
                cx="87.5"
                cy="40"
                r="1.5"
                stroke="rgba(99, 102, 241, 0.3)"
                fill="none"></circle>
        </svg>
    </div>
</section>

<script define:vars={{ projects }}>
    // Carousel State
    let currentProject = null;
    let currentImageIndex = 0;

    // DOM Elements
    const modal = document.getElementById("carousel-modal");
    const modalTitle = document.getElementById("modal-title");
    const carouselImage = document.getElementById("carousel-image");
    const imageCounter = document.getElementById("image-counter");
    const thumbnailsContainer = document.getElementById("thumbnails");
    const closeBtn = document.getElementById("close-modal");
    const prevBtn = document.getElementById("prev-btn");
    const nextBtn = document.getElementById("next-btn");

    // Open Carousel
    function openCarousel(projectId) {
        currentProject = projects.find((p) => p.id === projectId);
        if (!currentProject) return;

        currentImageIndex = 0;
        modalTitle.textContent = currentProject.title;
        updateCarouselImage();
        createThumbnails();
        modal.classList.add("active");
        document.body.style.overflow = "hidden";
    }

    // Close Carousel
    function closeCarousel() {
        modal.classList.remove("active");
        document.body.style.overflow = "";
        currentProject = null;
        currentImageIndex = 0;
    }

    // Update Carousel Image
    function updateCarouselImage() {
        if (!currentProject) return;

        carouselImage.src = currentProject.images[currentImageIndex];
        carouselImage.alt = `${currentProject.title} - Imagen ${currentImageIndex + 1}`;
        imageCounter.textContent = `${currentImageIndex + 1} / ${currentProject.images.length}`;

        // Update Active Thumbnails
        const thumbnails = thumbnailsContainer.querySelectorAll(".thumbnail");
        thumbnails.forEach((thumb, index) => {
            thumb.classList.toggle("active", index === currentImageIndex);
        });
    }

    // Create Thumbnails
    function createThumbnails() {
        if (!currentProject) return;

        thumbnailsContainer.innerHTML = "";
        currentProject.images.forEach((image, index) => {
            const thumbnail = document.createElement("button");
            thumbnail.className = "thumbnail";
            thumbnail.innerHTML = `<img src="${image}" alt="Thumbnail ${index + 1}" width="50" />`;
            thumbnail.addEventListener("click", () => {
                currentImageIndex = index;
                updateCarouselImage();
            });
            thumbnailsContainer.appendChild(thumbnail);
        });
    }

    // Previous Image
    function prevImage() {
        if (!currentProject) return;
        currentImageIndex =
            currentImageIndex === 0
                ? currentProject.images.length - 1
                : currentImageIndex - 1;
        updateCarouselImage();
    }

    // Next Image
    function nextImage() {
        if (!currentProject) return;
        currentImageIndex =
            currentImageIndex === currentProject.images.length - 1
                ? 0
                : currentImageIndex + 1;
        updateCarouselImage();
    }

    // Event listeners
    document.addEventListener("DOMContentLoaded", () => {
        // Click on project images (desktop)
        document
            .querySelectorAll(".project-image")
            .forEach((imageContainer) => {
                imageContainer.addEventListener("click", (e) => {
                    const projectId = parseInt(
                        e.currentTarget.dataset.projectId
                    );
                    openCarousel(projectId);
                });
            });

        // Click on project card (mobile)
        document.querySelectorAll(".project-card").forEach((card, index) => {
            card.addEventListener("click", (e) => {
                // Only on mobile (when the image is not visible)
                const projectImage = card.querySelector(".project-image");
                if (window.getComputedStyle(projectImage).display === "none") {
                    // Prevent button links from activating
                    if (e.target.closest(".btn")) {
                        return;
                    }
                    const projectId = projects[index].id;
                    openCarousel(projectId);
                }
            });
        });

        // Close modal
        closeBtn.addEventListener("click", closeCarousel);
        modal.addEventListener("click", (e) => {
            if (e.target === modal) closeCarousel();
        });

        // Carousel Navigation
        prevBtn.addEventListener("click", prevImage);
        nextBtn.addEventListener("click", nextImage);

        // Keyboard Navigation
        document.addEventListener("keydown", (e) => {
            if (!modal.classList.contains("active")) return;

            switch (e.key) {
                case "Escape":
                    closeCarousel();
                    break;
                case "ArrowLeft":
                    prevImage();
                    break;
                case "ArrowRight":
                    nextImage();
                    break;
            }
        });
    });
</script>

<style>
    .projects {
        padding: 3rem 2rem;
        background: #f8fafc;
        position: relative;
        overflow: hidden;
    }

    .container {
        max-width: 1000px;
        margin: 0 auto;
        position: relative;
        z-index: 2;
    }

    .section-title {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 2rem;
        font-weight: 700;
        color: #374151;
        margin-bottom: 3rem;
    }

    .projects-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: 1fr;
    }

    .project-card {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        background: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: 1px solid #e2e8f0;
        height: 400px;
    }

    .project-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 15px 35px -3px rgba(99, 102, 241, 0.15);
    }

    .project-image {
        position: relative;
        overflow: hidden;
        cursor: pointer;
    }

    .project-screenshot {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.3s ease;
    }

    .image-overlay {
        position: absolute;
        inset: 0;
        background: rgba(0, 0, 0, 0);
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        opacity: 0;
    }

    .project-image:hover .image-overlay {
        background: rgba(0, 0, 0, 0.2);
        opacity: 1;
    }

    .project-image:hover .project-screenshot {
        transform: scale(1.05);
    }

    .expand-icon {
        background: rgba(255, 255, 255, 0.9);
        border-radius: 50%;
        padding: 0.75rem;
        color: #6366f1;
    }

    .project-content {
        padding: 2rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .project-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #6366f1;
        margin: 0 0 1rem 0;
        line-height: 1.3;
    }

    .project-tags {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1rem;
        flex-wrap: wrap;
    }

    .tag {
        background: #374151;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
    }

    .project-description {
        color: #374151;
        line-height: 1.6;
        margin: 0 0 1.5rem 0;
    }

    .project-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .btn-outline {
        background: #a3e635;
        color: #6366f1;
        border: 2px solid #a3e635;
    }

    .btn-outline:hover {
        background: #6366f1;
        color: #a3e635;
        border-color: #6366f1;
    }

    /* Modal & Carousel */
    .modal-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

    .modal-overlay.active {
        opacity: 1;
        visibility: visible;
    }

    .modal-content {
        background: white;
        border-radius: 12px;
        width: 90vw;
        max-width: 900px;
        height: 80vh;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        transform: scale(0.9);
        transition: transform 0.3s ease;
    }

    .modal-overlay.active .modal-content {
        transform: scale(1);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.5rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .modal-title {
        font-size: 1.25rem;
        font-weight: 700;
        color: #6366f1;
        margin: 0;
    }

    .close-button {
        background: none;
        border: none;
        cursor: pointer;
        padding: 0.5rem;
        border-radius: 6px;
        transition: background-color 0.2s ease;
    }

    .close-button:hover {
        background: #f1f5f9;
    }

    .carousel-container {
        flex: 1;
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .carousel-main {
        position: relative;
        flex: 1;
        background: #f8fafc;
        border-radius: 8px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 350px;
    }

    .image-wrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
    }

    .carousel-image {
        width: 300px;
        height: auto;
        object-fit: contain;
        display: block;
        margin: 0 auto;
        max-height: 100%;
    }

    .carousel-nav {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(255, 255, 255, 0.95);
        border: 2px solid rgba(99, 102, 241, 0.2);
        border-radius: 50%;
        width: 3.5rem;
        height: 3.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s ease;
        color: #6366f1;
        z-index: 10;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .carousel-nav:hover {
        background: white;
        border-color: #6366f1;
        box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);
        transform: translateY(-50%) scale(1.05);
    }

    .prev-btn {
        left: 1.5rem;
    }

    .next-btn {
        right: 1.5rem;
    }

    .image-counter {
        position: absolute;
        bottom: 1rem;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0, 0, 0, 0.7);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.875rem;
    }

    .thumbnails {
        display: flex;
        gap: 0.75rem;
        justify-content: center;
        flex-wrap: wrap;
        padding: 1rem 0;
        background: #f8fafc;
        border-radius: 8px;
        min-height: 80px;
    }

    .thumbnail {
        width: 50px;
        border: 3px solid #e2e8f0;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s ease;
        background: white;
        padding: 0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .thumbnail:hover {
        border-color: #6366f1;
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(99, 102, 241, 0.2);
    }

    .thumbnail.active {
        border-color: #6366f1;
        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.3);
        transform: scale(1.1);
    }

    .thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    /* Decorative Elements */
    .decorative-terminal {
        position: absolute;
        top: 20%;
        right: 5%;
        z-index: 1;
        opacity: 0.8;
        animation: float 9s ease-in-out infinite;
    }

    .decorative-responsive {
        position: absolute;
        bottom: 15%;
        right: 8%;
        z-index: 1;
        opacity: 0.7;
        animation: float 11s ease-in-out infinite reverse;
    }

    @keyframes float {
        0%,
        100% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-12px);
        }
    }

    @media (max-width: 900px) {
        .projects {
            padding: 3rem 1rem;
        }

        .project-card {
            grid-template-columns: 1fr; /* Layout of one column */
            cursor: pointer; /* Make the entire card clickable */
            height: auto; /* Auto height */
        }

        /* Hide image on mobile */
        .project-image {
            display: none;
        }

        .project-content {
            padding: 1.5rem;
            justify-content: flex-start; /* Align content to the start */
        }

        .project-title {
            font-size: 1.25rem; /* Reduce font size */
        }

        .project-description {
            font-size: 0.9rem; /* Reduce font size */
            margin-bottom: 1rem; /* Reduce margin */
        }

        .section-title {
            font-size: 1.75rem;
        }

        .project-actions {
            flex-direction: column;
            margin-top: 0.5rem; /* Reduce margin top */
        }

        .btn {
            justify-content: center;
            padding: 0.6rem 1.2rem; /* Reduce padding */
            font-size: 0.9rem; /* Reduce font size */
        }

        .decorative-terminal,
        .decorative-responsive {
            display: none;
        }

        .modal-content {
            width: 95vw;
            height: 85vh;
        }

        .carousel-nav {
            width: 3rem;
            height: 3rem;
            border-width: 1px;
        }

        .prev-btn {
            left: 1rem;
        }

        .next-btn {
            right: 1rem;
        }

        .carousel-main {
            min-height: 280px;
        }

        .thumbnail {
            width: 50px;
            border-width: 2px;
        }

        .thumbnails {
            gap: 0.5rem;
            padding: 0.75rem 0;
            min-height: 30px;
        }

        .carousel-image {
            width: 100%;
            max-width: 300px;
        }
    }
</style>
